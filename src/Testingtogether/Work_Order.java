/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Testingtogether;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import static javax.swing.UIManager.getString;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author wilma
 */
public class Work_Order extends javax.swing.JFrame {

    /**
     * Creates new form Work_Order
     */
    public Work_Order() {
        initComponents();
        updateSPCombo();
        updateCountryCombo();
        updateworkorderstat();
        updatezonedrop();
        updatetemplatedrop();
    }
        String driver="com.microsoft.sqlserver.jdbc.SQLServerDriver";
        String url="jdbc:sqlserver://LAPTOP-CP0I48O5\\SQLEXPRESS:1433;databaseName=CIS3365 Shasta Analysts";
        String user="shasta";
        String pass="admin";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     private void updatetemplatedrop(){
        try{    
        Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from template";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                templatecombo.addItem(rs.getString("templatename"));
            }
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
        }
     
     private void updateSPCombo(){
        try{    
        Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from StateProvince";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                stated.addItem(rs.getString("StateProvinceAbbreviation"));
            }
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
        
        
    }
    
        private void updateCountryCombo(){
        try{    
        Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from Country";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                countryc.addItem(rs.getString("CountryAbbreviation"));
            }
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
        
        }    
    
        private void updateworkorderstat(){
        try{    
        Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from WorkOrderStatus";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                workstatusbox.addItem(rs.getString("WorkOrderStatusName"));
            }
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
        }
        
         private void updatezonedrop(){
        try{    
        Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, pass);
            String sql = "select * from zone";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                zonecombo.addItem(rs.getString("zonename"));
            }
            
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        
        }
        
        
         
        
        
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        work4 = new javax.swing.JTextField();
        work3 = new javax.swing.JTextField();
        work6 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        work5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btn_wupdate = new javax.swing.JButton();
        wrk_delete = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        work7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idbox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        wtable = new javax.swing.JTable();
        stated = new javax.swing.JComboBox<>();
        countryc = new javax.swing.JComboBox<>();
        workstatusbox = new javax.swing.JComboBox<>();
        zonecombo = new javax.swing.JComboBox<>();
        templatecombo = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1100, 727));

        work4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work4ActionPerformed(evt);
            }
        });

        work6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("City");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Work Order Status ");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Site Location");

        work5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                work5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Customer ID");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("Work Order Date");

        btn_wupdate.setText("Update");
        btn_wupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_wupdateActionPerformed(evt);
            }
        });

        wrk_delete.setText("Delete");
        wrk_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wrk_deleteActionPerformed(evt);
            }
        });

        jButton2.setText("New");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("View Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 255));
        jLabel6.setText("Buttons");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Work Order");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("State Province ");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("Zip Code");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("Zone");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Country");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Template");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Work Order ID");

        idbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idboxActionPerformed(evt);
            }
        });

        wtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Work Order ID", "Work Status ID", "Customer ID", "Work Order Date", "Site Location ", "City", "State Province ID", "Zip Code", "Country ID", "Zone ID", "Template ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        wtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(wtable);

        stated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statedActionPerformed(evt);
            }
        });

        countryc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrycActionPerformed(evt);
            }
        });

        workstatusbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workstatusboxActionPerformed(evt);
            }
        });

        jMenu10.setText("Home");

        jMenuItem29.setText("Home");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem29);

        jMenuItem30.setText("Welcome  ");
        jMenuItem30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem30ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem30);

        jMenuBar1.add(jMenu10);

        jMenu1.setText("Customer");

        jMenuItem2.setText("Customer");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Customer Request");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Appointment");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Feedback");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Descision");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setText("Modification");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("Warranty");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("WorkOrder");

        jMenuItem10.setText("WorkOrder");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem10);

        jMenuItem9.setText("WorkOrder Line");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem11.setText("WorkOrder Line Assignment");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem11);

        jMenuItem13.setText("WorkOrder Line Form");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuItem14.setText("Mileage");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem14);

        jMenuItem15.setText("Template");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("SubContractor");

        jMenuItem16.setText("SubContractor");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem16);

        jMenuItem17.setText("SubContractor Service");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem17);

        jMenuItem18.setText("Service");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem18);

        jMenuBar1.add(jMenu5);

        jMenu7.setText("Employee");

        jMenuItem19.setText("Employee");
        jMenu7.add(jMenuItem19);

        jMenuItem21.setText("Employee Assignment");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem21);

        jMenuItem22.setText("Purchase Order");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem22);

        jMenuBar1.add(jMenu7);

        jMenu8.setText("HOA");

        jMenuItem24.setText("HOA");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem24);

        jMenuItem25.setText("HOA Request");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem25);

        jMenuBar1.add(jMenu8);

        jMenu9.setText("GOV");

        jMenuItem26.setText("GOV");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem26);

        jMenuItem27.setText("Inspection");
        jMenuItem27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem27ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem27);

        jMenuItem28.setText("Permit Request");
        jMenuItem28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem28ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem28);

        jMenuBar1.add(jMenu9);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zonecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(work7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(templatecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 183, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idbox, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_wupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(wrk_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(workstatusbox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel8)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(44, 44, 44)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(work6)
                                .addComponent(work5)
                                .addComponent(work4)
                                .addComponent(work3, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)))
                        .addComponent(jLabel1))
                    .addGap(886, 886, 886)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(idbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(workstatusbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(30, 30, 30)
                                .addComponent(wrk_delete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_wupdate)))
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(stated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(work7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(countryc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(zonecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(templatecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 228, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(62, 62, 62)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(work3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(25, 25, 25)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(work4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(work5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(26, 26, 26)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(work6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(428, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try
        {
         
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            String sql="insert into Workorder"
                    +"(WorkOrderStatusID,CustomerID,WorkOrderDate,SiteLocation,City,StateProvinceID,ZipCode,CountryID,ZoneID,TemplateID)"
                            +"values(?,?,?,?,?,?,?,?,?,?)";
            int templatedrop = 0;
            switch (templatecombo.getSelectedItem().toString()){
                case "Residential": templatedrop=1;
                                break;
                
                case "Commercial": templatedrop=2;
                                break;
                case "Apartment": templatedrop=3;
                                break;
            }
            
            
            
            
            
            
            
            
            int zonedrop = 0;
            switch (zonecombo.getSelectedItem().toString()){
                case "Pearland": zonedrop=1;
                                break;
                
                case "Clear Lake": zonedrop=2;
                                break;
                case "Baytown": zonedrop=3;
                                break;
                case "Kingwood": zonedrop=4;
                                break;               
                                
                case "Spring": zonedrop=5;
                                break;                
                case "Cypress": zonedrop=6;
                                break;                
                                
                case "Tomball": zonedrop=7;
                                break;                
                case "Katy": zonedrop=8;
                                break;                
                case "Sugar Land": zonedrop=9;
                                break;                
               case "Galleria": zonedrop=10;
                                break;                 
                                
               case "Heights": zonedrop=11;
                                break;      
                case "Bellaire": zonedrop=12;
                                break;   
                case "Pasadena": zonedrop=13;
                                break;                   
                case "Channelview": zonedrop=14;
                                break;                   
                case "Montrose": zonedrop=15;
                                break;      
                case "Medical Center": zonedrop=16;
                                break;   
                case "Eado": zonedrop=17;
                                break;                   
                case "Downtown": zonedrop=18;
                                break;                   
                case "West U": zonedrop=19;
                                break;                   
                case "Galveston": zonedrop=20;
                                break;             
            
            
            
            }
            
            
            
            
            
            
            
            
            int workorderstat = 0;
            
            switch (workstatusbox.getSelectedItem().toString()){
                case "New Request": workorderstat=1;
                                break;
                
                case "In-Progress": workorderstat=2;
                                break;
                case "Cancelled by Employee": workorderstat=3;
                                break;
                case "Cancelled by Customer": workorderstat=4;
                                break;               
                                
                case "Complete": workorderstat=5;
                                break;                
                case "Weather Delay": workorderstat=6;
                                break;                
                                
                case "Customer Delay": workorderstat=7;
                                break;                
                case "Payment Pending": workorderstat=8;
                                break;                
                case "Reviewing Feedback": workorderstat=9;
                                break;                
               case "Modification": workorderstat=10;
                                break;                 
                                
               case "Parts on Order": workorderstat=11;
                                break;                 
                                
               case "Materials Retrivied": workorderstat=12;
                                break;                 
                case "Work Order Drafted": workorderstat=13;
                                break;                
                                
                   case "Awaiting Assignment": workorderstat=14;
                                break;
                case "Closed": workorderstat=15;
                                break;
                case "Awating Additional Information": workorderstat=16;
                                break;               
                                
                case "Awaiting Funding": workorderstat=17;
                                break;                
                case "Deferred": workorderstat=18;
                                break;                
                                
                case "Declined": workorderstat=19;
                                break;                
                case "Duplicate Request": workorderstat=20;
                                break;                
                case "Void": workorderstat=21;
                                break;                
                        
                                                
            }
            
            
            int stateprovid = 0;
            switch (stated.getSelectedItem().toString()){
                case "AL": stateprovid=1;
                            break;
                case "AK": stateprovid=2;
                            break;
                case "AZ": stateprovid=3;
                            break;
                case "AR": stateprovid=4;
                            break;
                case "CA": stateprovid=5;
                            break;
                case "CO": stateprovid=6;
                            break;
                case "CT": stateprovid=7;
                            break;
                case "DE": stateprovid=8;
                            break;
                case "FL": stateprovid=9;
                            break;
                case "GA": stateprovid=10;
                            break;
                case "HI": stateprovid=11;
                            break;
                case "ID": stateprovid=12;
                            break;
                case "IL": stateprovid=13;
                            break;
                case "IN": stateprovid=14;
                            break;
                case "IA": stateprovid=15;
                            break;
                case "KS": stateprovid=16;
                            break;
                case "KY": stateprovid=17;
                            break;
                case "LA": stateprovid=18;
                            break;
                case "ME": stateprovid=19;
                            break;
                case "MD": stateprovid=20;
                            break;
                case "MA": stateprovid=21;
                            break;
                case "MI": stateprovid=22;
                            break;
                case "MN": stateprovid=23;
                            break;
                case "MS": stateprovid=24;
                            break;
                case "MO": stateprovid=25;
                            break;
                case "MT": stateprovid=26;
                            break;
                case "NE": stateprovid=27;
                            break;
                case "NV": stateprovid=28;
                            break;
                case "NH": stateprovid=29;
                            break;
                case "NJ": stateprovid=30;
                            break;
                case "NM": stateprovid=31;
                            break;
                case "NY": stateprovid=32;
                            break;
                case "NC": stateprovid=33;
                            break;
                case "ND": stateprovid=34;
                            break;
                case "OH": stateprovid=35;
                            break;
                case "OK": stateprovid=36;
                            break;
                case "OR": stateprovid=37;
                            break;
                case "PA": stateprovid=38;
                            break;
                case "RI": stateprovid=39;
                            break;
                case "SC": stateprovid=40;
                            break;
                case "SD": stateprovid=41;
                            break;
                case "TN": stateprovid=42;
                            break;
                case "TX": stateprovid=43;
                            break;
                case "UT": stateprovid=44;
                            break;
                case "VT": stateprovid=45;
                            break;
                case "VA": stateprovid=46;
                            break;
                case "WA": stateprovid=47;
                            break;
                case "WV": stateprovid=48;
                            break;
                case "WI": stateprovid=49;
                            break;
                case "WY": stateprovid=50;
                            break;
                case "DC": stateprovid=51;
                            break;
                case "AS": stateprovid=52;
                            break;
                case "GU": stateprovid=53;
                            break;
                case "MP": stateprovid=54;
                            break;
                case "PR": stateprovid=55;
                            break;
                case "VI": stateprovid=56;
                            break;
                case "AG": stateprovid=57;
                            break;
                case "BC": stateprovid=58;
                            break;
                case "BS": stateprovid=59;
                            break;
                case "CM": stateprovid=60;
                            break;
                case "VS": stateprovid=61;
                            break;
                case "DF": stateprovid=62;
                            break;
                case "CH": stateprovid=63;
                            break;
                case "CL": stateprovid=65;
                            break;
                case "DG": stateprovid=66;
                            break;
                case "GT": stateprovid=67;
                            break;
                case "GR": stateprovid=68;
                            break;
                case "HG": stateprovid=69;
                            break;
                case "JA": stateprovid=70;
                            break;
                case "EM": stateprovid=71;
                            break;
                case "NA": stateprovid=74;
                            break;
                case "NL": stateprovid=75;
                            break;
                case "OA": stateprovid=76;
                            break;
                case "PU": stateprovid=77;
                            break;
                case "QT": stateprovid=78;
                            break;
                case "QR": stateprovid=79;
                            break;
                case "SL": stateprovid=80;
                            break;
                case "SI": stateprovid=81;
                            break;
                case "SO": stateprovid=82;
                            break;
                case "TB": stateprovid=83;
                            break;
                case "TM": stateprovid=84;
                            break;
                case "TL": stateprovid=85;
                            break;
                case "VE": stateprovid=86;
                            break;
                case "YU": stateprovid=87;
                            break;
                case "ZA": stateprovid=88;
                            break;
                case "ON": stateprovid=89;
                            break;
                case "QC": stateprovid=90;
                            break;
                case "NS": stateprovid=91;
                            break;
                case "NB": stateprovid=92;
                            break;
                case "MB": stateprovid=93;
                            break;
                case "PE": stateprovid=95;
                            break;
                case "SK": stateprovid=96;
                            break;
                case "AB": stateprovid=97;
                            break;
                case "NT": stateprovid=99;
                            break;
                case "YT": stateprovid=100;
                            break;
                case "NU": stateprovid=101;
            }
            
            
             int countryid = 0;
            switch (countryc.getSelectedItem().toString()){
                case "CN": countryid=1;
                            break;
                case "IN": countryid=2;
                            break;
                case "US": countryid=3;
                            break;
                case "ID": countryid=4;
                            break;
                case "BR": countryid=5;
                            break;
                case "PK": countryid=6;
                            break;
                case "NG": countryid=7;
                            break;
                case "BD": countryid=8;
                            break;
                case "RU": countryid=9;
                            break;
                case "JP": countryid=10;
                            break;
                case "MX": countryid=11;
                            break;
                case "PH": countryid=12;
                            break;
                case "VN": countryid=13;
                            break;
                case "ET": countryid=14;
                            break;
                case "EG": countryid=15;
                            break;
                case "DE": countryid=16;
                            break;
                case "IR": countryid=17;
                            break;
                case "TR": countryid=18;
                            break;
                case "CD": countryid=19;
                            break;
                case "TH": countryid=20;
                            break;
            }
            PreparedStatement pst=con.prepareStatement(sql);
            
            
            pst.setString(1, String.valueOf(workorderstat));
            pst.setString(2, work3.getText());
            pst.setString(3, work4.getText());
            pst.setString(4, work5.getText());
            pst.setString(5, work6.getText());
            pst.setString(6, String.valueOf(stateprovid));
            pst.setString(7, work7.getText());
            pst.setString(8, String.valueOf(countryid));
            
     
            pst.setString(9, String.valueOf(zonedrop));
            pst.setString(10, String.valueOf(templatedrop));
          
            
            
            
            
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"WorkOrder added");
            
        }
            catch(Exception e)
            {
                 JOptionPane.showMessageDialog(this,e.getMessage());
            }
       
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void work6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_work6ActionPerformed

    private void work4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_work4ActionPerformed

    private void btn_wupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_wupdateActionPerformed
       
              try
        {
            
         
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            String sql="update Workorder set WorkOrderStatusID=?,CustomerID=?,WorkOrderDate=?,SiteLocation=?,City=?,StateProvinceID=?,ZipCode=?,CountryID=?,ZoneID=?,TemplateID=? where WorkOrderID=?";
                            ;
               
                 int templatedrop = 0;
            switch (templatecombo.getSelectedItem().toString()){
                case "Residential": templatedrop=1;
                                break;
                
                case "Commercial": templatedrop=2;
                                break;
                case "Apartment": templatedrop=3;
                                break;
            }          
                            
                            
                            
                            
                  int zonedrop = 0;
            switch (zonecombo.getSelectedItem().toString()){
                case "Pearland": zonedrop=1;
                                break;
                
                case "Clear Lake": zonedrop=2;
                                break;
                case "Baytown": zonedrop=3;
                                break;
                case "Kingwood": zonedrop=4;
                                break;               
                                
                case "Spring": zonedrop=5;
                                break;                
                case "Cypress": zonedrop=6;
                                break;                
                                
                case "Tomball": zonedrop=7;
                                break;                
                case "Katy": zonedrop=8;
                                break;                
                case "Sugar Land": zonedrop=9;
                                break;                
               case "Galleria": zonedrop=10;
                                break;                 
                                
               case "Heights": zonedrop=11;
                                break;      
                case "Bellaire": zonedrop=12;
                                break;   
                case "Pasadena": zonedrop=13;
                                break;                   
                case "Channelview": zonedrop=14;
                                break;                   
                case "Montrose": zonedrop=15;
                                break;      
                case "Medical Center": zonedrop=16;
                                break;   
                case "Eado": zonedrop=17;
                                break;                   
                case "Downtown": zonedrop=18;
                                break;                   
                case "West U": zonedrop=19;
                                break;                   
                case "Galveston": zonedrop=20;
                                break;             
            
            
            
            }
                      
                            
                            
                            
                            
                            
                            
                            
                            
                            
               int workorderstat = 0;
            switch (workstatusbox.getSelectedItem().toString()){
                case "New Request": workorderstat=1;
                                break;
                
                case "In Progress": workorderstat=2;
                                break;
                case "Cancelled by Employee": workorderstat=3;
                                break;
                case "Cancelled by Customer": workorderstat=4;
                                break;               
                                
                case "Complete": workorderstat=5;
                                break;                
                case "Weather Delay": workorderstat=6;
                                break;                
                                
                case "Customer Delay": workorderstat=7;
                                break;                
                case "Payment Pending": workorderstat=8;
                                break;                
                case "Reviewing Feedback": workorderstat=9;
                                break;                
               case "Modification": workorderstat=10;
                                break;                 
                                
               case "Parts on Order": workorderstat=11;
                                break;                 
                                
               case "Materials Retrivied": workorderstat=12;
                                break;                 
                case "Work Order Drafted": workorderstat=13;
                                break;                
                                
                   case "Awaiting Assignment": workorderstat=14;
                                break;
                case "Closed": workorderstat=15;
                                break;
                case "Awating Additional Information": workorderstat=16;
                                break;               
                                
                case "Awaiting Funding": workorderstat=17;
                                break;                
                case "Deferred": workorderstat=18;
                                break;                
                                
                case "Declined": workorderstat=19;
                                break;                
                case "Duplicate Request": workorderstat=20;
                                break;                
                case "Void": workorderstat=21;
                                break;                
                        
                                                
            }                
                            
                            
            
            int stateprovid = 0;
            switch (stated.getSelectedItem().toString()){
                case "AL": stateprovid=1;
                            break;
                case "AK": stateprovid=2;
                            break;
                case "AZ": stateprovid=3;
                            break;
                case "AR": stateprovid=4;
                            break;
                case "CA": stateprovid=5;
                            break;
                case "CO": stateprovid=6;
                            break;
                case "CT": stateprovid=7;
                            break;
                case "DE": stateprovid=8;
                            break;
                case "FL": stateprovid=9;
                            break;
                case "GA": stateprovid=10;
                            break;
                case "HI": stateprovid=11;
                            break;
                case "ID": stateprovid=12;
                            break;
                case "IL": stateprovid=13;
                            break;
                case "IN": stateprovid=14;
                            break;
                case "IA": stateprovid=15;
                            break;
                case "KS": stateprovid=16;
                            break;
                case "KY": stateprovid=17;
                            break;
                case "LA": stateprovid=18;
                            break;
                case "ME": stateprovid=19;
                            break;
                case "MD": stateprovid=20;
                            break;
                case "MA": stateprovid=21;
                            break;
                case "MI": stateprovid=22;
                            break;
                case "MN": stateprovid=23;
                            break;
                case "MS": stateprovid=24;
                            break;
                case "MO": stateprovid=25;
                            break;
                case "MT": stateprovid=26;
                            break;
                case "NE": stateprovid=27;
                            break;
                case "NV": stateprovid=28;
                            break;
                case "NH": stateprovid=29;
                            break;
                case "NJ": stateprovid=30;
                            break;
                case "NM": stateprovid=31;
                            break;
                case "NY": stateprovid=32;
                            break;
                case "NC": stateprovid=33;
                            break;
                case "ND": stateprovid=34;
                            break;
                case "OH": stateprovid=35;
                            break;
                case "OK": stateprovid=36;
                            break;
                case "OR": stateprovid=37;
                            break;
                case "PA": stateprovid=38;
                            break;
                case "RI": stateprovid=39;
                            break;
                case "SC": stateprovid=40;
                            break;
                case "SD": stateprovid=41;
                            break;
                case "TN": stateprovid=42;
                            break;
                case "TX": stateprovid=43;
                            break;
                case "UT": stateprovid=44;
                            break;
                case "VT": stateprovid=45;
                            break;
                case "VA": stateprovid=46;
                            break;
                case "WA": stateprovid=47;
                            break;
                case "WV": stateprovid=48;
                            break;
                case "WI": stateprovid=49;
                            break;
                case "WY": stateprovid=50;
                            break;
                case "DC": stateprovid=51;
                            break;
                case "AS": stateprovid=52;
                            break;
                case "GU": stateprovid=53;
                            break;
                case "MP": stateprovid=54;
                            break;
                case "PR": stateprovid=55;
                            break;
                case "VI": stateprovid=56;
                            break;
                case "AG": stateprovid=57;
                            break;
                case "BC": stateprovid=58;
                            break;
                case "BS": stateprovid=59;
                            break;
                case "CM": stateprovid=60;
                            break;
                case "VS": stateprovid=61;
                            break;
                case "DF": stateprovid=62;
                            break;
                case "CH": stateprovid=63;
                            break;
                case "CL": stateprovid=65;
                            break;
                case "DG": stateprovid=66;
                            break;
                case "GT": stateprovid=67;
                            break;
                case "GR": stateprovid=68;
                            break;
                case "HG": stateprovid=69;
                            break;
                case "JA": stateprovid=70;
                            break;
                case "EM": stateprovid=71;
                            break;
                case "NA": stateprovid=74;
                            break;
                case "NL": stateprovid=75;
                            break;
                case "OA": stateprovid=76;
                            break;
                case "PU": stateprovid=77;
                            break;
                case "QT": stateprovid=78;
                            break;
                case "QR": stateprovid=79;
                            break;
                case "SL": stateprovid=80;
                            break;
                case "SI": stateprovid=81;
                            break;
                case "SO": stateprovid=82;
                            break;
                case "TB": stateprovid=83;
                            break;
                case "TM": stateprovid=84;
                            break;
                case "TL": stateprovid=85;
                            break;
                case "VE": stateprovid=86;
                            break;
                case "YU": stateprovid=87;
                            break;
                case "ZA": stateprovid=88;
                            break;
                case "ON": stateprovid=89;
                            break;
                case "QC": stateprovid=90;
                            break;
                case "NS": stateprovid=91;
                            break;
                case "NB": stateprovid=92;
                            break;
                case "MB": stateprovid=93;
                            break;
                case "PE": stateprovid=95;
                            break;
                case "SK": stateprovid=96;
                            break;
                case "AB": stateprovid=97;
                            break;
                case "NT": stateprovid=99;
                            break;
                case "YT": stateprovid=100;
                            break;
                case "NU": stateprovid=101;
            }
            
            
             int countryid = 0;
            switch (countryc.getSelectedItem().toString()){
                case "CN": countryid=1;
                            break;
                case "IN": countryid=2;
                            break;
                case "US": countryid=3;
                            break;
                case "ID": countryid=4;
                            break;
                case "BR": countryid=5;
                            break;
                case "PK": countryid=6;
                            break;
                case "NG": countryid=7;
                            break;
                case "BD": countryid=8;
                            break;
                case "RU": countryid=9;
                            break;
                case "JP": countryid=10;
                            break;
                case "MX": countryid=11;
                            break;
                case "PH": countryid=12;
                            break;
                case "VN": countryid=13;
                            break;
                case "ET": countryid=14;
                            break;
                case "EG": countryid=15;
                            break;
                case "DE": countryid=16;
                            break;
                case "IR": countryid=17;
                            break;
                case "TR": countryid=18;
                            break;
                case "CD": countryid=19;
                            break;
                case "TH": countryid=20;
                            break;
            }      
                            
                            
                            
                            
                            
                            
                            
                            
                            
                            
                            
            PreparedStatement pst=con.prepareStatement(sql);
           
            pst.setString(1, String.valueOf(workorderstat));
            pst.setString(2, work3.getText());
            pst.setString(3, work4.getText());
            pst.setString(4, work5.getText());
            pst.setString(5, work6.getText());
            pst.setString(6, String.valueOf(stateprovid));
            pst.setString(7, work7.getText());
            pst.setString(8, String.valueOf(countryid));
            pst.setString(9, String.valueOf(zonedrop));
             pst.setString(10, String.valueOf(templatedrop));
            pst.setString(11, idbox.getText());
            
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"WorkOrder Updated Successfully");
            
        }
            catch(Exception e)
            {
                 JOptionPane.showMessageDialog(this,e.getMessage());
            }
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_btn_wupdateActionPerformed

    private void wrk_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wrk_deleteActionPerformed

              try
        {
         
            Class.forName(driver);
            Connection con=DriverManager.getConnection(url,user,pass);
            String sql="Delete from  Workorder where WorkOrderID=?";
                            
            PreparedStatement pst=con.prepareStatement(sql);
            pst.setString(1, idbox.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Delete Successfully");
            
        }
            catch(Exception e)
            {
                 JOptionPane.showMessageDialog(this,e.getMessage());
            }        
    }//GEN-LAST:event_wrk_deleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try
        {
         
               Connection con=DriverManager.getConnection(url,user,pass);
               String sql="select * from Workorder";
               PreparedStatement pst=con.prepareStatement(sql);
               ResultSet rs=pst.executeQuery();
               DefaultTableModel tm=(DefaultTableModel)wtable.getModel();
               tm.setRowCount(0);
               
               while(rs.next())
               {
                   Object o[]={rs.getString("WorkOrderID"),rs.getString("WorkOrderStatusID"),rs.getString("CustomerID"),rs.getString("WorkOrderDate"),rs.getString ("SiteLocation"),rs.getString("City"),rs.getString("StateProvinceID"),rs.getString("ZipCode"),rs.getString("CountryID"),rs.getString("ZoneID"),rs.getString("TemplateID")};
                   tm.addRow(o);
               }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
        


        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void countrycActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countrycActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_countrycActionPerformed

    private void statedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statedActionPerformed

    private void workstatusboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workstatusboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_workstatusboxActionPerformed

    private void work5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_work5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_work5ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        // TODO add your handling code here:
        new Home ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        // TODO add your handling code here:
        new Testinter ().setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new customer ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new Customer_Request ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        new Appointment ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        new Feedback ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        new Decision ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        new Modification ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        new Warranty ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        new Work_Order ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        new Work_Order_Line ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        new Work_Order_Line_Assignment ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        new work_orderline_form ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        new Mileage ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        new template ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        new Subcontractor ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
        new SubcontractorService ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
        new Service ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        // TODO add your handling code here:
        new employee_assignment ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        // TODO add your handling code here:
        new PurchaseOrder ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        // TODO add your handling code here:
        new HOA ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        // TODO add your handling code here:
        new HOARequest ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        // TODO add your handling code here:
        new Inspection ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
        // TODO add your handling code here:
        new PermitRequest ().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void wtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wtableMouseClicked
        // TODO add your handling code here:
        int i =wtable.getSelectedRow();
        TableModel model = wtable.getModel();
        idbox.setText(model.getValueAt(i, 0).toString());
        {
            
        }
        
       
                                                
                        
    
    }//GEN-LAST:event_wtableMouseClicked

    private void idboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Work_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Work_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Work_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Work_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Work_Order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_wupdate;
    private javax.swing.JComboBox<String> countryc;
    private javax.swing.JTextField idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> stated;
    private javax.swing.JComboBox<String> templatecombo;
    private javax.swing.JTextField work3;
    private javax.swing.JTextField work4;
    private javax.swing.JTextField work5;
    private javax.swing.JTextField work6;
    private javax.swing.JTextField work7;
    private javax.swing.JComboBox<String> workstatusbox;
    private javax.swing.JButton wrk_delete;
    private javax.swing.JTable wtable;
    private javax.swing.JComboBox<String> zonecombo;
    // End of variables declaration//GEN-END:variables
}
